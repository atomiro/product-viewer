function CameraDollyControl(camera,rendererElement,options){function init(){$.extend(settings,options),self.panLockAt=Math.abs(settings.maxZoomDistance)-3,totalZoomDist=Math.abs(settings.minZoomDistance-settings.maxZoomDistance),zoomThreshold=Math.abs(settings.maxZoomDistance-settings.minZoomDistance/2),rendererElement.dblclick(onDblClick),rendererElement.mousemove(onMouseMove),rendererElement.mousedown(onMouseDown),rendererElement.mouseup(onMouseUp),rendererElement.hover(onHoverIn,onHoverOut),window.addEventListener("wheel",onMouseWheel),rendererElement[0].addEventListener("touchmove",onTouchMove,!1),rendererElement[0].addEventListener("touchend",onTouchEnd,!1)}function initControls(){rendererElement.dblclick(onDblClick),rendererElement.mousemove(onMouseMove),rendererElement.mousedown(onMouseDown),rendererElement.mouseup(onMouseUp),rendererElement.hover(onHoverIn,onHoverOut),window.addEventListener("wheel",onMouseWheel),rendererElement[0].addEventListener("touchmove",onTouchMove,!1),rendererElement[0].addEventListener("touchend",onTouchEnd,!1)}function unbindControls(){rendererElement.off("dblclick",onDblClick),rendererElement.off("mousemove",onMouseMove),rendererElement.off("mousedown",onMouseDown),rendererElement.off("mouseup",onMouseUp),rendererElement.off("hover",onHoverIn,onHoverOut),window.removeEventListener("wheel",onMouseWheel),rendererElement[0].removeEventListener("touchmove",onTouchMove),rendererElement[0].removeEventListener("touchend",onTouchEnd)}function onDblClick(event){autoZoom()}function onTouchEnd(event){var delay=300,delta=lastTouchTime?event.timeStamp-lastTouchTime:0;1==event.changedTouches.length&&delta<delay&&delta>100&&(event.preventDefault(),autoZoom()),lastTouchTime=event.timeStamp}function autoZoom(){isAnimating=!0,Math.abs(camera.position.x)>zoomThreshold?0==progress&&(zoomingOut=!1):0==progress&&(zoomingOut=!0)}function onMouseDown(event){mouseDown=!0}function onMouseUp(event){mouseDown=!1}function onHoverIn(event){mouseIn=!0}function onHoverOut(event){mouseIn=!1}function onMouseMove(event){if(Math.abs(cameraDist)<self.panLockAt){var delta=getMouseMoveDelta(event);Math.abs(delta[1])>Math.abs(delta[0])&&pan(delta[1],settings.mousePanSpeedFactor)}}function onMouseWheel(event){mouseIn&&(isAnimating=!1,event.preventDefault(),scrollDelta=ControlUtils.clamp(event.deltaY,-100,100),interactiveZoom(scrollDelta,settings.interactiveZoomSpeedFactor))}function onTouchMove(event){event.preventDefault(),1==event.touches.length?Math.abs(cameraDist)<self.panLockAt&&"VERTICAL"==touchTracker.axis&&pan(touchTracker.speedY,settings.touchPanSpeedFactor):2==event.touches.length&&(isAnimating=!1,interactiveZoom(touchTracker.deltaDistance,settings.interactiveZoomSpeedFactor))}function interactiveZoom(speed,factor){cameraDist+=speed*factor,constrainZoom(settings.minZoomDistance,settings.maxZoomDistance),camera.position.x=cameraDist,centerCamera()}function pan(speed,factor){cameraHeight-=speed*factor,constrainVerticalPan(settings.minCameraHeight,settings.maxCameraHeight),camera.position.y=cameraHeight,camera.lookAt(new THREE.Vector3(0,cameraHeight,0))}function centerCamera(){zoomLevel=Math.abs(cameraDist-settings.minZoomDistance)/totalZoomDist,cameraHeight=ControlUtils.lerp(cameraHeight,initHeight,zoomLevel),camera.position.y=cameraHeight,camera.lookAt(new THREE.Vector3(0,cameraHeight,0))}function animateZoom(step){isAnimating&&(progress+=step,progress=ControlUtils.clamp(progress,0,1),cameraHeight=ControlUtils.lerp(cameraHeight,initHeight,progress),cameraDist=zoomingOut?ControlUtils.lerp(cameraDist,settings.maxZoomDistance,progress):ControlUtils.lerp(cameraDist,settings.minZoomDistance,progress),camera.position.y=cameraHeight,camera.position.x=cameraDist,camera.lookAt(new THREE.Vector3(0,cameraHeight,0))),progress>=1&&(isAnimating=!1,progress=0)}function constrainZoom(min,max){Math.abs(cameraDist)<Math.abs(min)&&(cameraDist=min),Math.abs(cameraDist)>Math.abs(max)&&(cameraDist=max)}function constrainVerticalPan(min,max){cameraHeight=ControlUtils.clamp(cameraHeight,min,max)}function getMouseMoveDelta(event){var deltaX=0,deltaY=0;return mouseDown&&(deltaX=mouse.x-event.pageX,deltaY=mouse.y-event.pageY),mouse.x=event.pageX,mouse.y=event.pageY,[deltaX,deltaY]}var settings={minZoomDistance:-12,maxZoomDistance:-50,minCameraHeight:2.5,maxCameraHeight:14.5,animationSpeed:.04,touchPanSpeedFactor:.3,mousePanSpeedFactor:.015,interactiveZoomSpeedFactor:.2};this.panLockAt;var zoomThreshold,totalZoomDist,scrollDelta,lastTouchTime,touchTracker=new TouchTracker(rendererElement),initHeight=camera.position.y,cameraHeight=camera.position.y,cameraDist=camera.position.x,mouse={x:0,y:0},mouseDown=!1,mouseIn=!1,isAnimating=!1,zoomingOut=!1,progress=0,self=this;return init(),this.animate=function(){animateZoom(settings.animationSpeed)},this.registerControls=initControls,this.unbindControls=unbindControls,this}function MeshControl(meshes,rendererElement,options){function init(){$.extend(settings,options),registerControls()}function registerControls(){rendererElement.mousedown(onMouseDown),rendererElement.mouseup(onMouseUp),rendererElement.mousemove(onMouseMove),rendererElement[0].addEventListener("touchmove",onTouchMove,!1)}function unbindControls(){rendererElement.off("mousedown",onMouseDown),rendererElement.off("mouseup",onMouseUp),rendererElement.off("mousemove",onMouseMove),rendererElement[0].removeEventListener("touchmove",onTouchMove)}function onMouseMove(event){if(updateMouseMoveDelta(event),Math.abs(mouseDeltaX)>Math.abs(mouseDeltaY)){mouseDeltaX=ControlUtils.clamp(mouseDeltaX,-30,30);var angle=mouseDeltaX*Math.PI/180*settings.mouseSpeedFactor;rotateTo(angle)}}function onMouseDown(event){mouseDown=!0}function onMouseUp(event){mouseDown=!1}function onTouchMove(event){if(event.preventDefault(),1==event.touches.length&&"HORIZONTAL"==touchTracker.axis){var angle=touchTracker.speedX*Math.PI/180*settings.touchSpeedFactor;rotateTo(angle)}}function rotateTo(angle){for(var i=0;i<meshes.length;i++)meshes[i].rotateOnAxis(new THREE.Vector3(0,1,0),-angle)}function updateMouseMoveDelta(event){mouseDeltaX=0,mouseDeltaY=0,mouseDown&&(mouseDeltaX=mouseX-event.pageX,mouseDeltaY=mouseY-event.pageY),mouseX=event.pageX,mouseY=event.pageY}settings={mouseSpeedFactor:.7,touchSpeedFactor:15},this.meshes=meshes;var mouseX=0,mouseY=0,mouseDeltaX=0,mouseDeltaY=0,mouseDown=!1,touchTracker=new TouchTracker(rendererElement);return init(),this.registerControls=registerControls,this.unbindControls=unbindControls,this}function TouchTracker(element){function init(){var el=element[0];el.addEventListener("touchstart",onTouchStart,!1),el.addEventListener("touchmove",onTouchMove,!1),el.addEventListener("touchend",onTouchEnd,!1)}function onTouchStart(event){startTime=event.timeStamp,lastTouchTime=event.timeStamp,1==event.touches.length?(self.deltaX=0,self.deltaY=0,startPosX=event.touches[0].pageX,posX=startPosX,startPosY=event.touches[0].pageY,posY=startPosY,lastPosition.x=event.touches[0].pageX,lastPosition.y=event.touches[0].pageY):2==event.touches.length&&(currentDistance=touchDistance(event),lastDistance=currentDistance)}function onTouchMove(event){event.preventDefault(),1==event.touches.length?(getTouchMoveDelta(event),detectAxis(),self.speedX=self.deltaX/(event.timeStamp-lastTouchTime),self.speedY=self.deltaY/(event.timeStamp-lastTouchTime),lastTouchTime=event.timeStamp):2==event.touches.length&&(currentDistance=touchDistance(event),self.deltaDistance=currentDistance-lastDistance,lastDistance=currentDistance)}function onTouchEnd(event){self.deltaX=0,self.deltaY=0,self.deltaDistance=0}function getTouchMoveDelta(event){posX=event.touches[0].pageX,posY=event.touches[0].pageY,self.deltaX=lastPosition.x-event.touches[0].pageX,self.deltaY=lastPosition.y-event.touches[0].pageY,lastPosition.x=event.touches[0].pageX,lastPosition.y=event.touches[0].pageY}function touchDistance(event){var dx=event.touches[0].pageX-event.touches[1].pageX,dy=event.touches[0].pageY-event.touches[1].pageY,distance=Math.sqrt(dx*dx+dy*dy);return distance}function detectAxis(){var axisDiff=Math.abs(self.deltaY-self.deltaX);console.log(axisDiff),Math.abs(self.deltaY)>Math.abs(self.deltaX)?axisDiff>5&&(self.axis="VERTICAL"):axisDiff>5&&(self.axis="HORIZONTAL")}var startTime,lastTouchTime,posX=0,posY=0,startPosX=0,startPosY=0;this.deltaX=0,this.deltaY=0,this.speedX=0,this.speedY=0,this.axis="HORIZONTAL";var lastPosition={x:0,y:0},lastDistance=0,currentDistance=0;this.deltaDistance=0;var self=this;return init(),this.getDeltas=function(event){return getTouchMoveDelta(event),{dx:deltaX,dy:deltaY}},this}function Viewer(textureArray,element,options){function loadScene(){var sceneFile=settings.sceneFile,objloader=new THREE.ObjectLoader;objloader.load(sceneFile,setup,function(xhr){console.log("Scene "+sceneFile)},function(xhr){console.log(xhr)})}function setup(sceneFile){if(renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0}),renderer.setPixelRatio(DEVICE_PIXEL_RATIO),renderer.setSize(canvasWidth,canvasHeight),rendererElement.append(renderer.domElement),"transparent"==settings.sceneBackgroundColor)renderer.setClearColor(0,0);else{var bgcolor=new THREE.Color(settings.sceneBackgroundColor);bgcolor?sceneFile.background=bgcolor:sceneFile.background=new THREE.Color(0)}scene=sceneFile,textureManager=new THREE.LoadingManager,textureManager.onError=function(event){console.log("manager error"),console.log(event)},textureManager.onProgress=function(event){console.log("manager progress"),console.log(event)},textureManager.onLoad=function(event){0==initialized&&(setupMeshes(),setupCamera(),setupLighting(lightingConfigDark),render(),event=$.Event("viewer.loaded"),rendererElement.trigger(event),initialized=!0)};for(var i=0;i<textureArray.length;i++)loadTexture(textureArray[i])}function setupCamera(){camera=new THREE.PerspectiveCamera(settings.fov,settings.aspectRatio,CAM_NEAR_PLANE,CAM_FAR_PLANE),camera.position.x=settings.cameraXPosition;var center=.13*meshes[1].geometry.boundingBox.center().y;camera.position.y=center,camera.lookAt(new THREE.Vector3(0,center,0));var cameraSettings={maxZoomDistance:settings.cameraXPosition,maxCameraHeight:.115*meshes[1].geometry.boundingBox.size().y};cameraControl=new CameraDollyControl(camera,rendererElement,cameraSettings)}function setupMeshes(){for(var i=0;i<scene.children.length;i++)object=scene.children[i],"Mesh"==object.type&&(object.rotation.y=settings.initialRotation*Math.PI/180,meshes.push(object),object.material.map=textures[0],object.geometry.computeBoundingBox());meshes[1].visible=!1,meshes[0].visible=!0,meshControl=new MeshControl(meshes,rendererElement)}function setupLighting(config){lights={key:scene.getObjectByName("LKEY"),rim_right:scene.getObjectByName("LRIM_Right"),rim_left:scene.getObjectByName("LRIM_Left"),fill:scene.getObjectByName("LFILL"),ambient:scene.getObjectByName("LAmbient")},lights.key.intensity=config.key,lights.rim_right.intensity=config.rim_right,lights.rim_left.intensity=config.rim_left,lights.fill.intensity=config.fill,lights.ambient.intensity=config.ambient}function changeLighting(style){"light"==style.toLowerCase()?config=lightingConfigLight:"dark"==style.toLowerCase()&&(config=lightingConfigDark),lights.key.intensity=config.key,lights.rim_right.intensity=config.rim_right,lights.rim_left.intensity=config.rim_left,lights.fill.intensity=config.fill,lights.ambient.intensity=config.ambient}function getTextureByName(name){for(var texture,i=0;i<textures.length;i++)textures[i].name==name&&(texture=textures[i]);return texture}function getMeshByName(name){for(var mesh,i=0;i<meshes.length;i++)meshes[i].name==name&&(mesh=meshes[i]);return mesh}function loadTexture(textureFile){textureLoader=new THREE.TextureLoader(textureManager),textureLoader.load(textureFile,function(texture){console.log("loader success"),storeTexture(texture,textureFile)},function(xhr){console.log("Texture "+textureFile+" "+Math.round(xhr.loaded/xhr.total*100)+"%")},function(xhr){console.log("loader error"),console.log(xhr)})}function storeTexture(texture,filename){texture.name=filename,textures.push(texture)}function updateTexture(texture,mesh){texture.needsUpdate=!0,mesh.material.map=texture}function debounceResize(element){var debounce=_.debounce(resizeRenderer,200,{leading:!0});debounce(element)}function resizeRenderer(element){canvasWidth=rendererElement.width(),canvasHeight=canvasWidth/settings.aspectRatio,renderer.setSize(canvasWidth,canvasHeight),camera.updateProjectionMatrix()}function render(){requestFrame&&(requestAnimationFrame(render),cameraControl.animate(),renderer.render(scene,camera))}function restartRender(){requestFrame=!0,render()}function haltRender(){requestFrame=!1}function onMouseDown(event){element.css("cursor","-webkit-grabbing"),element.css("cursor","grabbing")}function onMouseUp(event){mouseDown=!1,element.css("cursor","-webkit-grab"),element.css("cursor","grab")}var scene,camera,renderer,meshControl,cameraControl,textureManager,lightingConfigLight={key:.5,rim_right:.6,rim_left:.6,fill:.4,ambient:.6},lightingConfigDark={key:.7,rim_right:.8,rim_left:1,fill:.3,ambient:.3},settings={sceneFile:"models_scene.json",fov:23,aspectRatio:.8,cameraXPosition:-35,cameraYPosition:11.5,initialRotation:-90,sceneBackgroundColor:"transparent"},requestFrame=!0,initialized=!1,meshes=[],lights={},textures=[],rendererElement=element,canvasWidth=rendererElement.width(),canvasHeight=canvasWidth/settings.aspectRatio,DEVICE_PIXEL_RATIO=window.devicePixelRatio?window.devicePixelRatio:1,CAM_FAR_PLANE=1e3,CAM_NEAR_PLANE=.1;return this.create=function(){$.extend(settings,options),loadScene(),$(window).resize(function(){debounceResize(element)}),element.mousedown(onMouseDown),element.mouseup(onMouseUp),element.css("cursor","-webkit-grab"),element.css("cursor","grab")},this.toggleModels=function(){var plusModel=getMeshByName("artemix3XLMesh.js"),straightModel=getMeshByName("artemixXSMesh.js");1==straightModel.visible?(plusModel.visible=!0,straightModel.visible=!1):(straightModel.visible=!0,plusModel.visible=!1),event=$.Event("viewer.togglemodel"),rendererElement.trigger(event)},this.switchTexture=function(name){for(var i=0;i<scene.children.length;i++)object=scene.children[i],"Mesh"==object.type&&updateTexture(getTextureByName(name),object);event=$.Event("viewer.switchtexture"),rendererElement.trigger(event)},this.displayModel=function(size){var plusModel=getMeshByName("artemix3XLMesh.js"),straightModel=getMeshByName("artemixXSMesh.js");"XS"==size?(straightModel.visible=!0,plusModel.visible=!1):"3XL"==size&&(plusModel.visible=!0,straightModel.visible=!1),event=$.Event("viewer.togglemodel"),rendererElement.trigger(event)},this.createControls=function(){cameraControl.registerControls(),meshControl.registerControls()},this.unbindControls=function(){cameraControl.unbindControls(),meshControl.unbindControls()},this.addTexture=loadTexture,this.restart=restartRender,this.halt=haltRender,this.changeLighting=changeLighting,this.create(),this}var ControlUtils={clamp:function(value,min,max){var clampedValue=value>max?max:value<min?min:value;return clampedValue},lerp:function(p0,p1,progress){ControlUtils.clamp(progress,0,1);var pu=p0+(p1-p0)*progress;return pu}};
//# sourceMappingURL=viewer.min.js.map