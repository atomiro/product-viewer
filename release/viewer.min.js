function CameraDollyControl(camera,rendererElement,options){function init(){$.extend(settings,options),self.panLockAt=Math.abs(settings.maxZoom)-3,totalZoomDist=Math.abs(settings.minZoom-settings.maxZoom),zoomThreshold=Math.abs(settings.maxZoom-settings.minZoom/2),rendererElement.dblclick(onDblClick),rendererElement.mousemove(onMouseMove),rendererElement.mousedown(onMouseDown),rendererElement.mouseup(onMouseUp),rendererElement.hover(onHoverIn,onHoverOut),window.addEventListener("wheel",onMouseWheel),rendererElement[0].addEventListener("touchmove",onTouchMove,!1),rendererElement[0].addEventListener("touchend",onTouchEnd,!1)}function initControls(){rendererElement.dblclick(onDblClick),rendererElement.mousemove(onMouseMove),rendererElement.mousedown(onMouseDown),rendererElement.mouseup(onMouseUp),rendererElement.hover(onHoverIn,onHoverOut),window.addEventListener("wheel",onMouseWheel),rendererElement[0].addEventListener("touchmove",onTouchMove,!1),rendererElement[0].addEventListener("touchend",onTouchEnd,!1)}function unbindControls(){rendererElement.off("dblclick",onDblClick),rendererElement.off("mousemove",onMouseMove),rendererElement.off("mousedown",onMouseDown),rendererElement.off("mouseup",onMouseUp),rendererElement.off("hover",onHoverIn,onHoverOut),window.removeEventListener("wheel",onMouseWheel),rendererElement[0].removeEventListener("touchmove",onTouchMove),rendererElement[0].removeEventListener("touchend",onTouchEnd)}function onDblClick(){autoZoom()}function onTouchEnd(event){var delay=300,delta=lastTouchTime?event.timeStamp-lastTouchTime:0;1==event.changedTouches.length&&delta<delay&&delta>100&&(event.preventDefault(),autoZoom()),lastTouchTime=event.timeStamp}function autoZoom(){isAnimating=!0,Math.abs(camera.position.z)>zoomThreshold?0==progress&&(zoomingOut=!1):0==progress&&(zoomingOut=!0)}function onMouseDown(){mouseDown=!0}function onMouseUp(){mouseDown=!1}function onHoverIn(){mouseIn=!0}function onHoverOut(){mouseIn=!1}function onMouseMove(event){if(Math.abs(cameraDist)<self.panLockAt){var delta=getMouseMoveDelta(event);Math.abs(delta[1])>Math.abs(delta[0])&&pan(delta[1],settings.mousePanSpeedFactor)}}function onMouseWheel(event){mouseIn&&(isAnimating=!1,event.preventDefault(),scrollDelta=ControlUtils.clamp(event.deltaY,-100,100),interactiveZoom(scrollDelta,settings.zoomSpeedFactor))}function onTouchMove(event){1==event.touches.length?Math.abs(cameraDist)<self.panLockAt&&(event.preventDefault(),"VERTICAL"==touchTracker.axis&&pan(touchTracker.speedY,settings.touchPanSpeedFactor)):2==event.touches.length&&(event.preventDefault(),isAnimating=!1,interactiveZoom(touchTracker.deltaDistance,settings.zoomSpeedFactor))}function interactiveZoom(speed,factor){cameraDist-=speed*factor,constrainZoom(settings.minZoom,settings.maxZoom),camera.position.z=cameraDist,centerCamera()}function pan(speed,factor){cameraHeight-=speed*factor,constrainVerticalPan(settings.minCameraHeight,settings.maxCameraHeight),camera.position.y=cameraHeight,camera.lookAt(new THREE.Vector3(0,cameraHeight,0))}function centerCamera(){zoomLevel=Math.abs(cameraDist-settings.minZoom)/totalZoomDist,cameraHeight=ControlUtils.lerp(cameraHeight,initHeight,zoomLevel),camera.position.y=cameraHeight,camera.lookAt(new THREE.Vector3(0,cameraHeight,0))}function centerOnObject(object){object.geometry.computeBoundingBox();var boundingBox=object.geometry.boundingBox,center=.13*boundingBox.center().y;initHeight=center,cameraHeight=center,camera.position.y=center,camera.lookAt(new THREE.Vector3(0,center,0))}function animateZoom(step){isAnimating&&(progress+=step,progress=ControlUtils.clamp(progress,0,1),cameraHeight=ControlUtils.lerp(cameraHeight,initHeight,progress),cameraDist=zoomingOut?ControlUtils.lerp(cameraDist,settings.maxZoom,progress):ControlUtils.lerp(cameraDist,settings.minZoom,progress),camera.position.y=cameraHeight,camera.position.z=cameraDist,camera.lookAt(new THREE.Vector3(0,cameraHeight,0))),progress>=1&&(isAnimating=!1,progress=0)}function constrainZoom(min,max){Math.abs(cameraDist)<Math.abs(min)&&(cameraDist=min),Math.abs(cameraDist)>Math.abs(max)&&(cameraDist=max)}function constrainVerticalPan(min,max){cameraHeight=ControlUtils.clamp(cameraHeight,min,max)}function getMouseMoveDelta(event){var deltaX=0,deltaY=0;return mouseDown&&(deltaX=lastPosition.x-event.pageX,deltaY=lastPosition.y-event.pageY),lastPosition.x=event.pageX,lastPosition.y=event.pageY,[deltaX,deltaY]}var settings={minZoom:12,maxZoom:50,minCameraHeight:2.5,maxCameraHeight:14.5,animationSpeed:.04,touchPanSpeedFactor:.3,mousePanSpeedFactor:.015,zoomSpeedFactor:.2},self=this;this.panLockAt;var lastTouchTime,zoomThreshold,totalZoomDist,scrollDelta,touchTracker=new TouchTracker(rendererElement),initHeight=camera.position.y,cameraHeight=camera.position.y,cameraDist=camera.position.z,lastPosition={x:0,y:0},mouseIn=!1,mouseDown=!1,isAnimating=!1,zoomingOut=!1,progress=0,self=this;return init(),this.animate=function(){animateZoom(settings.animationSpeed)},this.registerControls=initControls,this.unbindControls=unbindControls,this.focus=function(object){centerOnObject(object);var fov=camera.fov*(Math.PI/180);object.geometry.computeBoundingBox();var bBox=object.geometry.boundingBox,size=bBox.size(),maxDimension=(bBox.center(),Math.max(size.x,size.y,size.z)),distance=Math.abs(maxDimension/4*Math.tan(2*fov));distance*=1.33,camera.position.z=distance,cameraDist=distance,settings.maxZoom=distance},this}function MeshControl(meshes,rendererElement,options){function init(){$.extend(settings,options),registerControls()}function registerControls(){rendererElement.mousedown(onMouseDown),rendererElement.mouseup(onMouseUp),rendererElement.mousemove(onMouseMove),rendererElement.mouseenter(onMouseIn),rendererElement.mouseleave(onMouseOut),rendererElement[0].addEventListener("touchmove",onTouchMove,!1)}function unbindControls(){rendererElement.off("mousedown",onMouseDown),rendererElement.off("mouseup",onMouseUp),rendererElement.off("mousemove",onMouseMove),rendererElement[0].removeEventListener("touchmove",onTouchMove)}function onMouseMove(event){if(updateMouseMoveDelta(event),Math.abs(mouseDeltaX)>Math.abs(mouseDeltaY)){mouseDeltaX=ControlUtils.clamp(mouseDeltaX,-30,30);var angle=mouseDeltaX*Math.PI/180*settings.mouseSpeedFactor;rotateTo(angle)}}function onMouseDown(){idling&&(idling=!1),mouseDown=!0}function onMouseUp(){mouseDown=!1}function onMouseIn(){mouseIn=!0}function onMouseOut(){mouseIn=!1,mouseDown=!1}function onTouchMove(event){if(1==event.touches.length&&"HORIZONTAL"==touchTracker.axis){event.preventDefault(),idling&&(idling=!1);var angle=touchTracker.speedX*Math.PI/180*settings.touchSpeedFactor;rotateTo(angle)}}function rotateTo(angle){for(var axisOfRotation=new THREE.Vector3(0,1,0),i=0;i<meshes.length;i++)meshes[i].rotateOnAxis(axisOfRotation,-angle)}function updateMouseMoveDelta(event){mouseDeltaX=0,mouseDeltaY=0,mouseIn&&mouseDown&&(mouseDeltaX=mouseX-event.pageX,mouseDeltaY=mouseY-event.pageY),mouseX=event.pageX,mouseY=event.pageY}settings={mouseSpeedFactor:.7,touchSpeedFactor:15,idleSpeed:.006},this.meshes=meshes;var mouseX=0,mouseY=0,mouseDeltaX=0,mouseDeltaY=0,mouseDown=!1,mouseIn=!1,idling=!0,touchTracker=new TouchTracker(rendererElement);return init(),this.animate=function(){if(idling)for(var i=0;i<meshes.length;i++)meshes[i].rotation.y+=settings.idleSpeed},this.idle=function(){idling=!0},this.registerControls=registerControls,this.unbindControls=unbindControls,this}function TouchTracker(element){function init(){var elementClass=element.attr("class"),domElement=document.getElementsByClassName(elementClass)[0];domElement.addEventListener("touchstart",onTouchStart,!1),domElement.addEventListener("touchmove",onTouchMove,!1),domElement.addEventListener("touchend",onTouchEnd,!1)}function onTouchStart(event){startTime=event.timeStamp,lastTouchTime=event.timeStamp,1==event.touches.length?(self.deltaX=0,self.deltaY=0,lastPosition.x=event.touches[0].pageX,lastPosition.y=event.touches[0].pageY):2==event.touches.length&&(currentDistance=touchDistance(event),lastDistance=currentDistance)}function onTouchMove(event){1==event.touches.length?(getTouchMoveDelta(event),detectAxis(),self.speedX=self.deltaX/(event.timeStamp-lastTouchTime),self.speedY=self.deltaY/(event.timeStamp-lastTouchTime),lastTouchTime=event.timeStamp):2==event.touches.length&&(currentDistance=touchDistance(event),self.deltaDistance=currentDistance-lastDistance,console.log("delta",self.deltaDistance),lastDistance=currentDistance)}function onTouchEnd(){self.deltaX=0,self.deltaY=0,self.deltaDistance=0}function getTouchMoveDelta(event){self.deltaX=lastPosition.x-event.touches[0].pageX,self.deltaY=lastPosition.y-event.touches[0].pageY,lastPosition.x=event.touches[0].pageX,lastPosition.y=event.touches[0].pageY}function touchDistance(event){var dx=Math.abs(event.touches[0].pageX-event.touches[1].pageX),dy=Math.abs(event.touches[0].pageY-event.touches[1].pageY),distance=Math.sqrt(dx*dx+dy*dy);return distance}function detectAxis(){var axisDiff=Math.abs(self.deltaY-self.deltaX);Math.abs(self.deltaY)>Math.abs(self.deltaX)?axisDiff>2&&(self.axis="VERTICAL"):axisDiff>2&&(self.axis="HORIZONTAL")}var lastTouchTime,currentDistance=0,lastPosition={x:0,y:0},lastDistance=0;this.deltaX=0,this.deltaY=0,this.deltaDistance=0,this.speedX=0,this.speedY=0,this.axis="HORIZONTAL";var self=this;return init(),this.getDeltas=function(event){return getTouchMoveDelta(event),{dx:deltaX,dy:deltaY}},this}function Viewer(options,sceneSettings){function loadScene(){rendererElement=settings.container;var sceneFile=settings.scene,objloader=new THREE.ObjectLoader;objloader.load(sceneFile,init,function(xhr){var percent=xhr.loaded/xhr.total;triggerEvent("viewer.progress",{percent:percent})},function(xhr){console.log(xhr)})}function init(file){if(scene=file,renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0}),renderer.setPixelRatio(DEVICE_PIXEL_RATIO),canvasWidth=rendererElement.width(),canvasHeight=canvasWidth/settings.aspectRatio,renderer.setSize(canvasWidth,canvasHeight),rendererElement.append(renderer.domElement),"transparent"==settings.sceneBackgroundColor)renderer.setClearColor(0,0);else{var bgcolor=new THREE.Color(settings.sceneBackgroundColor);bgcolor?scene.background=bgcolor:scene.background=new THREE.Color(0)}bindElementControls(rendererElement),initCamera(),initMeshControl(),triggerEvent("viewer.initialized"),initialized=!0,0==settings.requestRender&&restart()}function initMeshControl(){for(var mc_options={idleSpeed:settings.idleSpeed},i=0;i<scene.children.length;i++)object=scene.children[i],"Mesh"==object.type&&meshes.push(object);meshControl=new MeshControl(meshes,rendererElement,mc_options)}function initCamera(){camera=new THREE.PerspectiveCamera(settings.fov,settings.aspectRatio,CAM_NEAR_PLANE,CAM_FAR_PLANE),camera.position.z=settings.cameraXPosition,camera.position.y=settings.cameraYPosition;var cameraSettings={maxZoom:settings.cameraXPosition,maxCameraHeight:15};cameraControl=new CameraDollyControl(camera,rendererElement,cameraSettings)}function getModelByName(modelName){for(var model,i=0;i<sceneSettings.models.length;i++)sceneSettings.models[i].name==modelName&&(model=sceneSettings.models[i]);return model}function getMapByName(mapName){for(var map,i=0;i<sceneSettings.maps.length;i++)sceneSettings.maps[i].name==mapName&&(map=sceneSettings.maps[i]);return map}function getTextureByName(name){for(var texture,i=0;i<textures.length;i++)textures[i].name==name&&(texture=textures[i]);return texture}function loadTexture(url){return settings.debug&&console.log("loading texture:",url),new Promise(function(resolve,reject){var textureLoader=new THREE.TextureLoader;textureLoader.load(url,resolve)})}function initModel(modelName){console.log("initModel",modelName);for(var model=getModelByName(modelName),object=scene.getObjectByName(model.scene_object),texturePromises=[],i=0;i<model.maps.length;i++){var map=getMapByName(model.maps[i]),promise=loadTexture(map.file);texturePromises.push(promise)}Promise.all(texturePromises).then(function(result){object.material.normalMap=result[0],object.material.specularMap=result[1],models.push(modelName)})}function displayModel(name){currentModel=name,models.indexOf(name)==-1&&initModel(name);var model=getModelByName(name),mesh=scene.getObjectByName(model.scene_object);mesh.visible=!0,cameraControl.focus(mesh);for(var i=0;i<sceneSettings.models.length;i++){var objectName=sceneSettings.models[i].scene_object;if(objectName!=mesh.name){var m=scene.getObjectByName(objectName);m.visible=!1}}}function initTexture(name){for(var textureSettings,model=getModelByName(currentModel),mesh=scene.getObjectByName(model.scene_object),i=0;i<sceneSettings.textures.length;i++)sceneSettings.textures[i].name==name&&(textureSettings=sceneSettings.textures[i]);var file=textureSettings.file,promise=loadTexture(file);promise.then(function(texture){storeTexture(texture,textureSettings.name),console.log("loaded texture:",textureSettings.name),renderTexture(texture,mesh),console.log("applied to:",mesh.name),useLighting(textureSettings.lighting),triggerEvent("viewer.switchtexture")})}function displayTexture(name){for(var textureSettings,model=getModelByName(currentModel),mesh=scene.getObjectByName(model.scene_object),i=0;i<sceneSettings.textures.length;i++)sceneSettings.textures[i].name==name&&(textureSettings=sceneSettings.textures[i]);var texture=getTextureByName(name);texture?(renderTexture(texture,mesh),console.log("applied "+texture.name+" to "+mesh.name),useLighting(textureSettings.lighting),triggerEvent("viewer.switchtexture")):initTexture(name)}function useLighting(name){for(var lightingSettings,model=getModelByName(currentModel),mesh=scene.getObjectByName(model.scene_object),i=0;i<sceneSettings.lighting.length;i++)sceneSettings.lighting[i].name==name&&(lightingSettings=sceneSettings.lighting[i]);var lightsObject=lightingSettings.scene_object;if(console.log("useLighting",name,lightsObject),lightingSettings.specular_color){var specularColor=new THREE.Color(Number(lightingSettings.specular_color));mesh.material.specular=specularColor}for(var i=0;i<sceneSettings.lighting.length;i++){var object=scene.getObjectByName(sceneSettings.lighting[i].scene_object);object.name==lightsObject?object.visible=!0:object.visible=!1}}function renderTexture(texture,mesh){texture.needsUpdate=!0,mesh.material.map=texture}function debounceResize(element){var debounce=_.debounce(resizeRenderer,200,{leading:!0});debounce(element)}function resizeRenderer(element){canvasWidth=element.width(),canvasHeight=canvasWidth/settings.aspectRatio,renderer.setSize(canvasWidth,canvasHeight),camera.updateProjectionMatrix()}function render(){requestFrame&&(requestAnimationFrame(render),cameraControl.animate(),meshControl.animate(),renderer.render(scene,camera))}function restart(){requestFrame=!0,render()}function halt(){requestFrame=!1}function onMouseDown(element){element.addClass("viewer-interacting"),element.removeClass("viewer-interact")}function onMouseUp(element){mouseDown=!1,element.removeClass("viewer-interacting"),element.addClass("viewer-interact")}function onMouseOut(element){element.removeClass("viewer-interacting"),element.addClass("viewer-interact")}function triggerEvent(eventName,detail){try{event=$.Event(eventName),detail&&(event.detail=detail),rendererElement.trigger(event)}catch(e){console.warn("Modern Event API not supported",e);var event=document.createEvent("CustomEvent");event.initCustomEvent(eventName,!0,!0,detail);var elementClass=rendererElement.attr("class");eventElement=document.getElementsByClassName(elementClass)[0],eventElement.dispatchEvent(event)}}function mouseFeedbackListeners(element){element.addClass("viewer-interact"),element.mousedown(function(){onMouseDown(element)}),element.mouseup(function(){onMouseUp(element)}),element.mouseleave(function(){onMouseOut(element)})}function bindElementControls(element){$(window).resize(function(){debounceResize(element)}),mouseFeedbackListeners(element)}function storeTexture(texture,name){texture.name=name,textures.push(texture)}var scene,camera,renderer,rendererElement,canvasWidth,canvasHeight,cameraControl,meshControl,currentModel,settings={scene:"assets/scene_specularImageADJ.json",container:$(".viewer"),fov:23,aspectRatio:.8,cameraXPosition:35,cameraYPosition:11.5,idleSpeed:.006,debug:!1,requestRender:!1},initialized=!1,requestFrame=!0,sceneSettings=sceneSettings,meshes=[],models=[],textures=[],DEVICE_PIXEL_RATIO=window.devicePixelRatio?window.devicePixelRatio:1,CAM_FAR_PLANE=500,CAM_NEAR_PLANE=.1,self=this;return this.create=function(){$.extend(settings,options),loadScene()},this.displayImageAsTexture=function(image,name){texture=new THREE.Texture(image),storeTexture(texture,name),self.displayTexture(name),triggerEvent("viewer.switchtexture")},this.addTextureFromImage=function(image,name){texture=new THREE.Texture(image),storeTexture(texture,name)},this.displayModel=displayModel,this.displayTexture=displayTexture,this.createControls=function(){cameraControl.registerControls(),meshControl.registerControls()},this.unbindControls=function(){cameraControl.unbindControls(),meshControl.unbindControls()},this.start=function(){restart(),self.createControls()},this.stop=function(){halt(),self.unbindControls()},this.idle=function(){meshControl.idle()},this.create(),this}Number.isInteger=Number.isInteger||function(value){return"number"==typeof value&&isFinite(value)&&Math.floor(value)===value};var ControlUtils={clamp:function(value,min,max){var clampedValue=value>max?max:value<min?min:value;return clampedValue},lerp:function(p0,p1,progress){ControlUtils.clamp(progress,0,1);var pu=p0+(p1-p0)*progress;return pu},radians:function(deg){var rad=deg*(Math.PI/180);return rad}};
//# sourceMappingURL=viewer.min.js.map